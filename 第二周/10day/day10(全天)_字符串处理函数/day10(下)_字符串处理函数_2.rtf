{\rtf1\ansi\ansicpg936\cocoartf1265
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 STHeitiSC-Light;}
{\colortbl;\red255\green255\blue255;\red217\green11\blue0;\red254\green147\blue106;}
\paperw11900\paperh16840\margl1440\margr1440\vieww15500\viewh9540\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs48 \cf0 \
=====================================================\
\

\f1 \'a1\'be\'d5\'fd\'c4\'dc\'c1\'bf
\f0 ++
\f1 \'a1\'bf\'c7\'bf\'bb\'af\'d6\'aa\'ca\'b6\'b8\'fc\'d0\'c2\'a3\'ac\'ca\'f7\'c1\'a2
\f0 \'93
\f1 \'d6\'d5\'c9\'ed\'ca\'dc\'bd\'cc\'d3\'fd
\f0 \'94
\f1 \'b5\'c4\'b9\'db\'c4\'ee\'a3\'ac\'d2\'d1\'b3\'c9\'ce\'aa\'ca\'b1\'b4\'fa\'b5\'c4\'ba\'f4\'bb\'bd\'a1\'a3\'d7\'ee\'ba\'c3\'b5\'c4\'d1\'a7\'c9\'fa\'c0\'d6\'d3\'da\'d2\'e2\'ca\'b6\'b5\'bd\'d7\'d4\'d1\'a7\'d6\'ae\'d6\'d8\'d2\'aa\'a3\'ac\'b2\'a2\'b9\'c4\'c0\'f8\'d7\'d4\'bc\'ba\'c6\'be\'bd\'e8\'d7\'d4\'c9\'ed\'b5\'c4\'c4\'dc\'c1\'a6\'d4\'da\'bb\'fd\'bc\'ab\'b5\'c4\'c9\'fa\'bb\'ee\'d6\'d0\'c4\'a5\'c1\'b7\'bc\'b3\'c8\'a1\'d6\'aa\'ca\'b6\'a1\'a3\'cb\'fb\'c3\'c7\'b8\'fc\'b6\'e0\'b5\'c4\'ca\'c7\'d2\'c0\'bf\'bf\'c4\'a5\'c1\'b7\'b6\'f8\'b2\'bb\'ca\'c7\'d6\'b1\'bd\'d3\'b4\'ab\'ca\'da\'a3\'ac\'b2\'a2\'c5\'ac\'c1\'a6\'ca\'b9\'d7\'d4\'bc\'ba\'b3\'c9\'ce\'aa\'d5\'fd\'d4\'da\'bd\'f8\'d0\'d0\'b5\'c4\'b9\'a4\'d7\'f7\'d6\'d0\'b5\'c4\'d2\'bb\'b7\'d6\'d7\'d3\'a3\'ac\'d5\'e2\'d1\'f9\'d1\'a7\'cf\'b0\'be\'cd\'b1\'c8\'d2\'bb\'ce\'b6\'b1\'bb\'b6\'af\'b5\'d8\'bd\'d3\'ca\'dc\'d6\'aa\'ca\'b6\'b5\'c4\'b7\'b6\'b3\'eb\'ba\'cd\'cf\'b8\'bd\'da\'b8\'fc\'ce\'aa\'b8\'df\'c3\'f7\'a1\'a3
\f0 \
\
====================day10(
\f1 \'b6\'af\'ca\'d6\'b2\'bf\'b7\'d6
\f0 )====================\
   \

\f1 \'a1\'be\'b4\'f3\'b8\'d9\'d6\'aa\'ca\'b6\'b5\'e3\'a1\'bf
\f0 \
\
	1.
\f1 \'b3\'a3\'d3\'c3\'d7\'d6\'b7\'fb\'b4\'ae\'b4\'a6\'c0\'ed\'ba\'af\'ca\'fd\'ca\'b5\'cf\'d6
\f0 \
\
	2.sprintf
\f1 \'ba\'cd
\f0 sscanf
\f1 \'ba\'af\'ca\'fd
\f0 \
\
====================day10(
\f1 \'b6\'af\'ca\'d6\'b2\'bf\'b7\'d6
\f0 )====================\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f1\fs58 \cf0 \'a1\'be\'d7\'d4\'b6\'a8\'d2\'e5\'d7\'d6\'b7\'fb\'b4\'ae\'b4\'a6\'c0\'ed\'ba\'af\'ca\'fd\'a1\'bf
\f0\fs48 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f1 \cf0 \'d2\'bb\'a1\'a2\'b3\'a3\'d3\'c3\'d7\'d6\'b7\'fb\'b4\'ae\'b4\'a6\'c0\'ed\'ba\'af\'ca\'fd\'b5\'c4\'ca\'b5\'cf\'d6\'a3\'a8\'bc\'b4\'d2\'aa\'c7\'f3\'d7\'d4\'bc\'ba\'c4\'dc\'d0\'b4\'b3\'f6\'ba\'af\'ca\'fd\'cc\'e5\'b5\'c4\'c4\'da\'c8\'dd\'a3\'a9
\f0 \
\
	 (1) 
\f1 \'d7\'d4\'b6\'a8\'d2\'e5
\f0 strlen
\f1 \'ba\'af\'ca\'fd
\f0      
\f1 \'a3\'a8
\f0 11_mystrlen.c  
\f1 \'b2\'ce\'bf\'bc
\f0 12_mystrlen.c
\f1 \'a3\'a9
\f0 \
		\
		
\f1 \'cc\'e1\'ca\'be\'a3\'ba
\f0 \
		unsigned long mystrlen(const char *str);\
\
\
\
\
\
\
\
\
\
	 (2) 
\f1 \'d7\'d4\'b6\'a8\'d2\'e5
\f0 strcpy
\f1 \'ba\'af\'ca\'fd
\f0     
\f1 \'a3\'a8
\f0 13_mystrcpy.c
\f1 \'a3\'a9
\f0 \
		\
		
\f1 \'cc\'e1\'ca\'be\'a3\'ba
\f0 \
		char *mystrcpy(char *dest, const char *src);		\
		\{\
		   \
		\}\
\
\
\
\
\
\
\
	 (3) 
\f1 \'d7\'d4\'b6\'a8\'d2\'e5
\f0 strchr
\f1 \'ba\'af\'ca\'fd
\f0    
\f1 \'a3\'a8
\f0 14_mystrchr.c
\f1 \'a3\'a9
\f0 \
\
		
\f1 \'cc\'e1\'ca\'be\'a3\'ba
\f0 \
		char *mystrchr(char *str, const char c);\
		\
		for(i = 0;str[i]!= '\\0';i++)\
		\{\
		    \
		\}\
\
	 (4) 
\f1 \'d7\'d4\'b6\'a8\'d2\'e5
\f0 strrchr
\f1 \'ba\'af\'ca\'fd
\f0    
\f1 \'a3\'a8
\f0 15_mystrrchr.c
\f1 \'a3\'a9
\f0  \
\
		
\f1 \'cc\'e1\'ca\'be\'a3\'ba
\f0 \
		char *mystrrchr(char *str, const char c);\
\
\
\
\
\
\
\
\
\
\
	 (5) 
\f1 \'d7\'d4\'b6\'a8\'d2\'e5
\f0 strcmp
\f1 \'ba\'af\'ca\'fd
\f0      
\f1 \'a3\'a8
\f0 16_mystrcmp.c
\f1 \'a3\'a9
\f0 \
\
		
\f1 \'cc\'e1\'ca\'be\'a3\'ba
\f0 \
		int  mystrcmp(const char *s1, const char *s2);\
\
		1.  
\f1 \'d5\'d2\'d1\'ad\'bb\'b7\'bd\'e1\'ca\'f8\'cc\'f5\'bc\'fe
\f0     s1[i] != '\\0'  && s2[i] != '\\0'\
		2.  
\f1 \'b7\'b5\'bb\'d8
\f0  s1[i] - s2[i] 
\f1 \'b5\'c4\'b2\'ee\'d6\'b5
\f0 .\
\
\
\
\
\
\
\
\
\
	 (6) 
\f1 \'d7\'d4\'b6\'a8\'d2\'e5
\f0 strcat
\f1 \'ba\'af\'ca\'fd
\f0      
\f1 \'a3\'a8
\f0 17_mystrcat.c
\f1 \'a3\'a9
\f0 \
\
		
\f1 \'cc\'e1\'ca\'be\'a3\'ba
\f0 \
		char *mystrcat(char *s1, const char *s2);\
\
\
\
\
\
\
\
\
\
\
\
\
	 (7) 
\f1 \'d7\'d4\'b6\'a8\'d2\'e5
\f0 strstr
\f1 \'ba\'af\'ca\'fd
\f0       (18_strstr.c)   \
\
		
\f1 \'cc\'e1\'ca\'be
\f0 :\
		 char *mystrstr(const char *s1, const char *s2);	 \
\
\
\
\
\
\
\
\
\
\
	 (8) 
\f1 \'d7\'d4\'b6\'a8\'d2\'e5\'ca\'b5\'cf\'d6
\f0 atoi
\f1 \'ba\'af\'ca\'fd
\f0      (19_atoi.c)\
\
		int myatoi(char *s);\
\
\
\
\
\
\
\
\
\
\
\
\
=====================================================\

\f1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf2 \'a1\'be\'d2\'d4\'cf\'c2\'ce\'aa\'d7\'d4\'d1\'a7\'c4\'da\'c8\'dd\'a1\'bf\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \'b6\'fe\'a1\'a2\'d0\'c5\'cf\'a2\'bd\'bb\'bb\'a5
\f0 \

\f1 \
1\'a3\'a9\'a1\'be\'d6\'d5\'b6\'cb\'d3\'eb\'c4\'da\'b4\'e6\'bd\'bb\'bb\'a5\'ba\'af\'ca\'fd\'a1\'bf\'a3\'baprintf\'d3\'ebscanf\

\f0 \
        
\f1 \'d0\'e8\'c7\'f3\'d2\'bb
\f0 : 
\f1 \'b4\'f2\'d3\'a1
\f0 12:59:59
\f1 \'b8\'f1\'ca\'bd\'b5\'c4\'c4\'da\'c8\'dd\'b5\'bd\'b1\'ea\'d7\'bc\'ca\'e4\'b3\'f6\'b6\'cb
\f0 .\
\
        
\f1 \'d0\'e8\'c7\'f3\'b6\'fe
\f0 : 
\f1 \'b4\'d3\'b1\'ea\'d7\'bc\'ca\'e4\'c8\'eb\'b6\'cb\'bd\'d3\'ca\'d5
\f0 12:59:59
\f1 \'b8\'f1\'ca\'bd\'b5\'c4\'c4\'da\'c8\'dd
\f0 .\
\
      			1> 
\fs44 printf : 
\f1 \'ca\'e4\'b3\'f6\'c4\'bf\'b5\'c4\'b5\'d8\'ca\'c7\'d6\'d5\'b6\'cb\'a3\'bbscanf\'a3\'ba\'ca\'e4\'c8\'eb\'b5\'c4\'c0\'b4\'d4\'b4\'ca\'c7\'d6\'d5\'b6\'cb\'a1\'a3
\f0\fs48 \
\
	 			2> printf(\'93%d:%d:%d\'94,h,m,s);\
\
	 			3> scanf("%d:%d:%d",&h,&m,&s);\
\
=====================================================\
 
\f1 \
2\'a3\'a9\'a1\'be\'ca\'fd\'d7\'e9\'d3\'eb\'c4\'da\'b4\'e6\'bd\'bb\'bb\'a5\'ba\'af\'ca\'fd\'a1\'bf\'a3\'ba sprintf \'d3\'eb sscanf\
\

\f0 		
\f1 \'d0\'e8\'c7\'f3\'c8\'fd
\f0 : 
\f1 \'b4\'f2\'d3\'a1
\f0 12:59:59
\f1 \'b8\'f1\'ca\'bd\'b5\'c4\'c4\'da\'c8\'dd\'b5\'bd\'ca\'fd\'d7\'e9
\f0        
\f1 \'a3\'a8
\f0 20_sprintf.c
\f1 \'a3\'a9
\f0 \
\
	 		1> 
\f1 \'d2\'fd\'bd\'f8
\f0 sprintf
\f1 \'ba\'af\'ca\'fd
\f0 \
\
	  				 1
\f1 \'a3\'a9\'d7\'d6\'b7\'fb\'b4\'ae\'b8\'f1\'ca\'bd\'bb\'af\'ca\'e4\'b3\'f6\'ba\'af\'ca\'fd
\f0 :sprintf\
\
	   				 2
\f1 \'a3\'a9
\f0 int sprintf(const char *s, const char *fmt, \'85)\
\
	  		 		 3
\f1 \'a3\'a9
\f0 printf
\f1 \'ba\'cd
\f0 sprintf
\f1 \'b6\'d4\'b1\'c8
\f0 \
\
	  
\f1 \'a1\'be\'bf\'ce\'cc\'c3\'c1\'b7\'cf\'b0
\f0 :
\f1 \'a1\'bf
\f0 \
	    
\f1 \'b0\'b4\'d5\'d5\'d2\'d4\'cf\'c2\'b8\'f1\'ca\'bd\'ca\'e4\'b3\'f6\'ca\'b1\'bc\'e4\'b5\'bd\'ca\'fd\'d7\'e9
\f0 time[20]
\f1 \'d6\'d0
\f0 .\
\
	      			1> 
\f1 \'c4\'ea
\f0 -
\f1 \'d4\'c2
\f0 -
\f1 \'c8\'d5
\f0      (exam15.c)\
\
	      			2> 
\f1 \'ca\'b1
\f0 :
\f1 \'b7\'d6
\f0 :
\f1 \'c3\'eb
\f0 	  (exam16.c)\
\
====================================================\
\
		
\f1 \'d0\'e8\'c7\'f3\'cb\'c4
\f0 : 
\f1 \'b4\'d3\'ca\'fd\'d7\'e9\'b6\'c1\'c8\'a1
\f0 12:59:59
\f1 \'b8\'f1\'ca\'bd\'b5\'c4\'c4\'da\'c8\'dd
\f0       
\f1 \'a3\'a8
\f0 21_sscanf.c
\f1 \'a3\'a9
\f0 \
\
				2> 
\f1 \'d2\'fd\'bd\'f8
\f0 sscanf
\f1 \'ba\'af\'ca\'fd
\f0 \
\
	   					1) 
\f1 \'d3\'c3\'bb\'a7\'d0\'e8\'d2\'aa\'bd\'ab\'b8\'d5\'b2\'c5\'b5\'c4\'d3\'c3\'bb\'a7\'d0\'c5\'cf\'a2\'d6\'d8\'d0\'c2\'bd\'e2\'ce\'f6\'ce\'aa\'b5\'a5\'b8\'f6\'b5\'c4\'ca\'f4\'d0\'d4
\f0 \
\
	   					2) 
\f1 \'d7\'d6\'b7\'fb\'b4\'ae\'b8\'f1\'ca\'bd\'bb\'af\'b6\'c1\'c8\'a1\'ba\'af\'ca\'fd
\f0 :sscanf\
\
	   					3) sscanf
\f1 \'ca\'b9\'d3\'c3
\f0 :
\f1 \'bc\'af
\f0 strtok
\f1 \'ba\'cd
\f0 atoi
\f1 \'b5\'c8\'ba\'af\'ca\'fd\'b9\'a6\'c4\'dc\'d3\'da\'d2\'bb\'cc\'e5
\f0 \
\
	   					4) scanf
\f1 \'ba\'cd
\f0 sscanf
\f1 \'b6\'d4\'b1\'c8
\f0 \
\
	  							
\f1 \'cc\'e1\'ca\'be\'a3\'ba
\f0 \
	  							int h = 12;\
	  							int m = 59;\
	  							int s = 59;\
\
=====================================================\
\
		
\f1 \'d0\'e8\'c7\'f3\'ce\'e5
\f0 : 
\f1 \'b0\'d1\'d7\'d6\'b7\'fb\'b4\'ae
\f0 "zhangsan:12:m:17.5:100\'94
\f1 \'b6\'c1\'c8\'a1\'b5\'bd\'ca\'fd\'d7\'e9\'d6\'d0
\f0  												
\f1 \'a3\'a8
\f0 22_sscanf.c
\f1 \'a3\'a9
\f0 \
\
				3> 
\f1 \'be\'d9\'d2\'bb\'b7\'b4\'c8\'fd
\f0 ,
\f1 \'d3\'c3\'ba\'c3
\f0 sprintf
\f1 \'d3\'eb
\f0 sscanf
\f1 \'ba\'af\'ca\'fd
\f0     \
\
\
\
\
 \
\
	   
\f1 \'a1\'be\'bf\'ce\'cc\'c3\'c1\'b7\'cf\'b0\'a1\'bf
\f0 \
		 
\f1 \'b0\'d1
\f0 char *sprintfstr =  \'93www.baidu.com\'94;
\f1 \'d6\'d0\'b5\'c4\'c4\'da\'c8\'dd\'b6\'c1\'c8\'a1\'b5\'bd\'ca\'fd\'d7\'e9\'d6\'d0\'a1\'a3
\f0 \
	\
====================================================\

\f1 \'c0\'a9\'d5\'b9\'a3\'ba
\f0 \
\

\f1 \'a1\'be\'b3\'ac\'b4\'f3\'ca\'fd\'cf\'e0\'bc\'d3\'a1\'bf
\f0 	\
\
123423413412374891374238476123846183474183\
                                                                                                   \
+\
123423413412374891374238476123846183474183  \
                                                                                                   \
\

\f1 \'b5\'da\'d2\'bb\'b8\'f6\'ce\'ca\'cc\'e2\'a3\'ba
\f0 \
int		long int     long long \

\f1 \'b4\'e6\'b4\'a2\'c1\'bd\'b8\'f6\'ca\'fd\'a3\'ba\'d3\'c3\'d7\'d6\'b7\'fb\'b4\'ae\'b4\'e6\'b4\'a2\'a3\'bb
\f0 \
\

\f1 \'b5\'da\'b6\'fe\'ce\'ca\'cc\'e2\'a3\'ba\'b0\'d1\'d7\'d6\'b7\'fb\'b4\'ae\'ca\'fd\'d7\'d6\'d7\'d6\'b7\'fb\'d7\'aa\'bb\'bb\'b3\'c9\'c6\'d5\'cd\'a8\'ca\'fd\'d7\'d6\'a3\'bb
\f0 \
\

\f1 \'b5\'da\'c8\'fd\'b8\'f6\'ce\'ca\'cc\'e2\'a3\'ba \'bd\'ab\'bd\'e1\'b9\'fb\'b4\'e6\'b4\'a2\'d4\'da\'b3\'a4\'b6\'c8\'b1\'c8\'bd\'cf\'b3\'a4\'b5\'c4\'ca\'fd\'d7\'e9\'c0\'ef;\

\f0         \

\f1 \'b5\'da\'cb\'c4\'b8\'f6\'ce\'ca\'cc\'e2\'a3\'ba
\f0   
\f1 \'b4\'d3\'ca\'fd\'d1\'a7\'d2\'e2\'d2\'e5\'c9\'cf\'b5\'c4\'b8\'f6\'ce\'bb\'bf\'aa\'ca\'bc\'cf\'e0\'bc\'d3\'a3\'bb\
\
\'b5\'da\'ce\'e5\'b8\'f6\'ce\'ca\'cc\'e2\'a3\'ba\'b2\'e2\'ca\'d4\'b0\'b8\'c0\'fd\'a3\'ba  \
a\'a1\'a2           b\'a1\'a2                 c\'a1\'a2\
1249         9999               999\
3458         9999                 9\

\f0 \
		1111\
		2222\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
		3333\
\
		1111\
			22\
\
\
=====================================================\
\

\f1 \'a1\'beHomeWork1\'a1\'bf\

\f0 \
1.
\f1 \'ca\'b5\'cf\'d6
\f0 myatoi
\f1 \'a3\'ac\'b9\'a6\'c4\'dc\'c0\'e0\'cb\'c6\'b9\'d9\'b7\'bd
\f0 atoi;   (home5.c)\
\
2.
\f1 \'ca\'b5\'cf\'d6
\f0 myStrcmp;    
\f1 \'a3\'a8
\f0 home6.c
\f1 \'a3\'a9\

\f0 \
3.
\f1 \'ca\'b5\'cf\'d6
\f0 myStrStr;   \cb3 (home7.c)\cb1 \
\
4.
\f1 \'bd\'ab\'d5\'e2\'b8\'f6\'d7\'d6\'b7\'fb\'b4\'ae\'b0\'b4\'d5\'d5\'b5\'a5\'b4\'ca\'c4\'e6\'d0\'f2
\f0 \'93You are a so cheap man\'94
\f1 \'a3\'bb
\f0 \
\'93man cheap so a are You\'94      (home8.c)\
\
5.
\f1 \'d4\'da\'d7\'d6\'b7\'fb\'b4\'ae
\f0 \'93cbcabcbcbcacbc\'94
\f1 \'a3\'ac\'d6\'d0\'b2\'e9\'d5\'d2
\f0 \'94cbc\'94
\f1 \'b3\'f6\'cf\'d6\'bc\'b8\'b4\'ce\'a1\'a3
\f0 \
	
\f1 \'a3\'a8
\f0 1
\f1 \'a3\'a9
\f0 cbcbc
\f1 \'cb\'e3\'d2\'bb\'b4\'ce
\f0 \
	
\f1 \'a3\'a8
\f0 2
\f1 \'a3\'a9
\f0 cbcbc
\f1 \'cb\'e3\'c1\'bd\'b4\'ce     
\f0 \cf2 (home9.c)\
\cf0 \
\
6.
\f1 \'ca\'e4\'c8\'eb\'d2\'bb\'b8\'f6\'d7\'d6\'b7\'fb\'b4\'ae\'a3\'ac\'c7\'e5\'b3\'fd\'d7\'d6\'b7\'fb\'b4\'ae\'d6\'d0\'cb\'f9\'d3\'d0\'b5\'c4\'b1\'ea\'b5\'e3\'b7\'fb\'ba\'c5\'a1\'a3
\f0 \
   
\f1 \'ca\'e4\'c8\'eb
\f0 \'93hello
\f1 \'a3\'ac
\f0 baby!\'94\
	
\f1 \'ca\'e4\'b3\'f6
\f0   hellobaby        (home12.c)\
\
======================================================\
\

\f1 \'a1\'be\'bf\'ce\'ba\'f3\'bc\'d3\'d3\'cd\'d5\'be\'a1\'bf
\f0 \
     \
1
\f1 \'a1\'a2\'b1\'b8\'cd\'fc\'c2\'bc
\f0 :\
    int mystrlen(const char *str)  //
\f1 \'bc\'c6\'ca\'fd\'d0\'ce\'ca\'bd\'d0\'b4\'b7\'a8
\f0 \
    \{\
	int len = 0;\
	int i = 0;\
	while(str[i] != '\\0')\
	\{\
		len++;\
		i++\
	\}\
	return len;\
    \}\
\
    int mystrlen(const char *str)  //
\f1 \'d6\'b8\'d5\'eb\'d0\'ce\'ca\'bd\'d0\'b4\'b7\'a8
\f0 \
    \{\
	char *p = str;\
	while(*str != '\\0')\
	\{\
		str++;\
	\}\
	return str - p;\
    \}\
\
    int mystrlen(const char *str) //
\f1 \'d6\'b8\'d5\'eb\'ba\'cd\'bc\'c6\'ca\'fd\'d0\'ce\'ca\'bd\'d4\'d3\'ba\'cf\'b5\'c4\'d0\'b4\'b7\'a8
\f0 \
    \{\
	int len = 0;\
	while(*str++ != \'91\\0\'92)\
	\{\
	   len ++;\
	\}\
	return len;\
    \}\
\
=========================over==========================\
\
\
\
\
}