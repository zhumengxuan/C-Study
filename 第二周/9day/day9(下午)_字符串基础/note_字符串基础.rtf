{\rtf1\ansi\ansicpg936\cocoartf1265
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 STHeitiSC-Light;\f2\fnil\fcharset0 Menlo-Regular;
\f3\fnil\fcharset0 AppleColorEmoji;}
{\colortbl;\red255\green255\blue255;\red253\green165\blue49;\red134\green205\blue77;\red230\green243\blue125;
\red254\green187\blue100;\red255\green39\blue18;\red63\green105\blue30;\red0\green68\blue254;\red217\green11\blue0;
\red132\green221\blue253;\red174\green0\blue240;\red253\green193\blue49;\red253\green154\blue0;\red94\green220\blue255;
\red159\green160\blue28;\red46\green174\blue187;\red193\green101\blue28;\red74\green0\blue230;\red85\green142\blue40;
\red254\green112\blue56;\red198\green50\blue253;\red102\green177\blue50;\red254\green73\blue64;\red254\green209\blue100;
\red255\green83\blue8;\red252\green189\blue0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww15940\viewh10800\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs48 \cf0 \
=====================================================\
\

\f1 \'a1\'be\'d5\'fd\'c4\'dc\'c1\'bf
\f0 ++
\f1 \'a1\'bf\'cd\'f5\'b9\'fa\'ce\'ac\'cb\'b5\'b9\'c5\'bd\'f1\'d6\'ae\'b3\'c9\'b4\'f3\'ca\'c2\'d2\'b5\'a1\'a2\'b4\'f3\'d1\'a7\'ce\'ca\'d5\'df\'a3\'ac\'b1\'d8\'be\'ad\'b9\'fd\'c8\'fd\'d6\'d6\'be\'b3\'bd\'e7
\f0 :\
	
\f1 \'b5\'da\'d2\'bb\'be\'b3
\f0 : 
\f1 \'d7\'f2\'d2\'b9\'ce\'f7\'b7\'e7\'b5\'f2\'b1\'cc\'ca\'f7\'a1\'a3\'b6\'c0\'c9\'cf\'b8\'df\'c2\'a5\'a3\'ac\'cd\'fb\'be\'a1\'cc\'ec\'d1\'c4\'c2\'b7\'a1\'a3
\f0 \
	
\f1 \'b5\'da\'b6\'fe\'be\'b3
\f0 : 
\f1 \'d2\'c2\'b4\'f8\'bd\'a5\'bf\'ed\'d6\'d5\'b2\'bb\'bb\'da\'a3\'ac\'ce\'aa\'d2\'c1\'cf\'fb\'b5\'c3\'c8\'cb\'e3\'be\'e3\'b2\'a1\'a3
\f0 \
	
\f1 \'b5\'da\'c8\'fd\'be\'b3
\f0 : 
\f1 \'d6\'da\'c0\'ef\'d1\'b0\'cb\'fb\'c7\'a7\'b0\'d9\'b6\'c8\'a3\'ac\'dd\'eb\'c8\'bb\'bb\'d8\'ca\'d7\'a3\'ac\'c4\'c7\'c8\'cb\'c8\'b4\'d4\'da\'b5\'c6\'bb\'f0\'c0\'bb\'c9\'ba\'b4\'a6
\f0 .\
\
======================day9(
\f1 \'cf\'c2
\f0 )========================\
\

\f1 \'a1\'be\'b4\'f3\'b8\'d9\'d6\'aa\'ca\'b6\'b5\'e3\'a1\'bf
\f0 \
\
	1.
\f1 \cb2 \'d7\'d6\'b7\'fb\cb1 \'ba\'cd\cb3 \'d7\'d6\'b7\'fb\'b4\'a6\'c0\'ed\'ba\'af\'ca\'fd
\f0 \cb1 \
\
	2.
\f1 \cb4 \'d7\'d6\'b7\'fb\'b4\'ae\'b5\'c4\'b1\'be\'d6\'ca\cb1 \'ba\'cd\cb5 \'d7\'d6\'b7\'fb\'b4\'ae\'ca\'e4\'c8\'eb\'ca\'e4\'b3\'f6\'ba\'af\'ca\'fd
\f0 \cb1 \
	\
		printf(\'93\'94%s);\
		scanf(\'93\'94%s);  /   scanf(\'93\'94%[^\\n]);\
\
		fgets()           puts        gets()\
\
	3.
\f1 \cf6 \'d7\'d6\'b7\'fb\'b4\'ae\'d7\'aa\'bb\'bb\'ba\'af\'ca\'fd\cf0 \

\f0 	\
			\'9312345\'94   \'97\'97\'97>    
\f1 \'ca\'fd\'d7\'d612345\

\f0 \
=====================day9(
\f1 \'cf\'c2
\f0 )==========================\
   \

\f1 \'a1\'be\'d7\'d6\'b7\'fb\'b4\'a6\'c0\'ed\'a1\'bf
\f0 \
\

\f1 \'d2\'bb\'a1\'a2\'d7\'d6\'b7\'fb\'ba\'cd\'d7\'d6\'b7\'fb\'b4\'a6\'c0\'ed\'ba\'af\'ca\'fd
\f0 \
\
	1.
\f1 \'b3\'a3\'d3\'c3\'d7\'d6\'b7\'fb\'b6\'d4\'d3\'a6\'b5\'c4
\f0 ASCII
\f1 \'c2\'eb
\f0 \
\
		
\f1 \'ca\'fd\'d7\'d6\'d7\'d6\'b7\'fb\'a3\'ba
\f0 \'920\'92~\'929\'92		         \cf7 48
\f1 \cf0 \'a1\'ab57
\f0 \
		
\f1 \'d0\'a1\'d0\'b4\'d7\'d6\'c4\'b8\'d7\'d6\'b7\'fb\'a3\'ba
\f0 \'91a\'92~\'92z\'92		\cf6 97
\f1 \cf0 \'a1\'ab122
\f0 \
		
\f1 \'b4\'f3\'d0\'b4\'d7\'d6\'c4\'b8\'d7\'d6\'b7\'fb\'a3\'ba
\f0 \'92A\'92~\'92Z\'92        \cf8 65
\f1 \cf0 \'a1\'ab90\
\
		
\f0 \
		
\f1 \'b0\'d1
\f0 4
\f1 \'b8\'f6\'d7\'d6\'bd\'da\'b5\'c4\'ca\'fd\'be\'dd\'d7\'b0\'bd\'f8
\f0 1
\f1 \'b8\'f6\'d7\'d6\'bd\'da\'b5\'c4\'b5\'d8\'d6\'b7\'c0\'ef
\f0 \
				00000\cf9 97\cf0 									char  ch\
\
		1
\f1 \'b8\'f6\'d7\'d6\'bd\'da\'a3\'ba
\f0   char      -128  \'97\'97\'97 127		ascii 
\f1 \'a3\'ba
\f0     0\'97\'97\'97\'97127\
\
		int
\f1 \'d5\'e2\'b8\'f6\'b4\'f3\'c0\'e0\'cf\'c2\'c3\'e6\'b5\'c4\'a3\'ba
\f0  4
\f1 \'b8\'f6\'d7\'d6\'bd\'da
\f0 \
\
\
			\
\
\
\
      \
\
	2.
\f1 \'d7\'d6\'b7\'fb\'b5\'c4\'b1\'be\'d6\'ca
\f0 	    
\f1 \'a3\'a8
\f0 13_char.c
\f1 \'a3\'a9
\f0 \
\
	    
\f1 \'cb\'bc\'bf\'bc
\f0 : \cb10 sizeof(char) = 1\cb1  
\f1 \'ba\'cd
\f0   \cb3 sizeof(97) = 4\cb1 \
		char c = 0;	\
		sizeof
\f1 \'a3\'a8
\f0 c
\f1 \'a3\'a9
\f0 ;\
\
	    1
\f1 \'a3\'a9\'d7\'d6\'b7\'fb\'b5\'c4\'b1\'be\'d6\'ca\'ce\'aa\'d2\'bb\'b8\'f6
\f0 int
\f1 \'c0\'e0\'d0\'cd\'b5\'c4
\f0 ascii
\f1 \'c2\'eb
\f0 \
\
	    2
\f1 \'a3\'a9\'d7\'d6\'b7\'fb\'b1\'e4\'c1\'bf\'b1\'a3\'b4\'e6\'b5\'c4\'ca\'c7
\f0 ascii
\f1 \'c2\'eb
\f0 ,
\f1 \'b5\'ab\'ca\'c7
\f0 ascii
\f1 \'c2\'eb\'d6\'bb\'d0\'e8\'d2\'aa\'d2\'bb\'b8\'f6\'d7\'d6\'bd\'da\'bc\'b4\'bf\'c9\'b1\'a3\'b4\'e6\'a1\'a3
\f0 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f1\fs50 \cf0 		3\'a3\'a9\'d4\'da\'cb\'f9\'d3\'d0\'b5\'c4\'b1\'e0\'d2\'eb\'cf\'b5\'cd\'b3\'d6\'d0\'b6\'bc\'b9\'e6\'b6\'a8\'d2\'d4\cf11 \'d2\'bb\'b8\'f6\'d7\'d6\'bd\'da\'c0\'b4\'b4\'e6\'b7\'c5\'d2\'bb\'b8\'f6\'d7\'d6\'b7\'fb\cf0 \'a3\'ac\
			  \cf6 \'d7\'d6\'b7\'fb\'ca\'fd\'be\'dd\'b6\'bc\'ca\'c7\'d2\'d4
\f0 ASCII
\f1 \'c2\'eb\'b4\'e6\'b4\'a2
\f0 \cf0 \
 					    char -128~127\
\
						ascii: 0~127\
\

\f1 						\'cb\'f9\'d2\'d4\'a3\'ac\'d6\'bb\'d0\'e8\'d2\'aa\'d3\'c3\'d2\'bb\'b8\'f6\'d7\'d6\'bd\'da\'c0\'b4\'b4\'e6\'b4\'a2\'bc\'b4\'bf\'c9\'a1\'a3\
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs48 \cf0 \
\
	3.
\f1 \'ca\'b9\'d3\'c3\cb12 \'d7\'d6\'b7\'fb\cb8 \'c5\'d0\'b6\'cf\cb12 \'ba\'af\'ca\'fd\cb1         (
\f0 14_isdigit.c
\f1 )
\f0 \
\
	          0 --
\f1 \'b1\'ed\'ca\'be\'b2\'e2\'ca\'d4\'b2\'bb\'b3\'c9\'c1\'a2
\f0 \
\
	          
\f1 \'b7\'c7\'c1\'e3
\f0  --
\f1 \'b1\'ed\'ca\'be\'b2\'e2\'ca\'d4\'b3\'c9\'c1\'a2
\f0 (
\f1 \'d7\'a2\'d2\'e2
\f0 : 
\f1 \'b2\'bb\'bd\'f6\'bd\'f6\'ca\'c7
\f0 1
\f1 \'b2\'c5\'b1\'ed\'ca\'be\'b2\'e2\'ca\'d4\'b3\'c9\'c1\'a2
\f0 )\
\
	    #include  <\cf11 c\cf0 type.h>        \
\
					1>   
\f1 \'b4\'ab\'d2\'bb\'b8\'f6\'d7\'d6\'b7\'fb\'d0\'ce\'d7\'b4\'b5\'c4\'d7\'d6\'b7\'fb
\f0      \'91A\'92    
\f1 \'a3\'a8int\'a3\'a9
\f0 \
\
					2>    
\f1 \'b4\'ab\'d2\'bb\'b8\'f6\'d7\'d6\'b7\'fb\'b5\'c4ascii\'c2\'eb  97      \'a3\'a8int\'a3\'a9
\f0 \
		\
	    1> int is\cf11 digit\cf0 (int c)	         
\f1 \'c5\'d0\'b6\'cf\'ca\'c7\'b7\'f1\'ca\'c7\'ca\'fd\'d7\'d6\'d7\'d6\'b7\'fb
\f0         \
\
	    2> int is\cf9 al\cf11 pha\cf0 (int c)	    
\f1  \'c5\'d0\'b6\'cf\'ca\'c7\'b7\'f1\'ca\'c7\'d7\'d6\'c4\'b8
\f0 (
\f1 \'ba\'ac\'b4\'f3\'d0\'a1\'d0\'b4
\f0 )
\f1 \'d7\'d6\'b7\'fb
\f0  \
\
	    3> int is\cf6 al\cf8 num\cf0 (int c)        
\f1 \'c5\'d0\'b6\'cf\'ca\'c7\'b7\'f1\'ca\'c7\'ca\'fd\'d7\'d6\'d7\'d6\'b7\'fb\'bb\'f2\'d7\'d6\'c4\'b8\'d7\'d6\'b7\'fb
\f0 \
\
	    4> int is\cf6 lower\cf0 (int c)         
\f1 \'c5\'d0\'b6\'cf\'ca\'c7\'b7\'f1\'ca\'c7\'d0\'a1\'d0\'b4\'d7\'d6\'c4\'b8\'d7\'d6\'b7\'fb
\f0 \
\
	    5> int is\cf7 upper\cf0 (int c)	     
\f1 \'c5\'d0\'b6\'cf\'ca\'c7\'b7\'f1\'ca\'c7\'b4\'f3\'d0\'b4\'d7\'d6\'c4\'b8\'d7\'d6\'b7\'fb
\f0 \
\
        6> int is\cf12 space\cf0 (int c)	     
\f1 \'bf\'d5\'b0\'d7\'d7\'d6\'b7\'fb\'a3\'a8\'ba\'ac\'bf\'d5\'b8\'f1
\f0  
\f1 \'a1\'a2\'d6\'c6\'b1\'ed\'b7\'fb
\f0 \\t
\f1 \'a1\'a2\'bb\'bb\'d0\'d0\'b7\'fb
\f0 \\n
\f1 \'a3\'a9
\f0 \
\
\
\
\
	    
\f1 \'a1\'be\'bf\'ce\'cc\'c3\'c1\'b7\'cf\'b0\'a1\'bf
\f0 \
	    	 
\f1 \'d3\'c3\'bb\'a7\'ca\'e4\'c8\'eb\'d2\'bb\'b8\'f6\'d7\'d6\'b7\'fb\'b4\'ae
\f0 ,
\f1 \'cd\'b3\'bc\'c6\'c6\'e4\'d6\'d0\'ca\'fd\'d7\'d6
\f0 ,
\f1 \'b4\'f3\'d0\'b4\'d7\'d6\'c4\'b8
\f0 ,
\f1 \'d0\'a1\'d0\'b4\'d7\'d6\'c4\'b8
\f0 ,
\f1 \cb5 \'bf\'d5\'b8\'f1\cb1 \'b5\'c4\'b8\'f6\'ca\'fd			\'a3\'a8\'d2\'aa\'c7\'f3\'ca\'b9\'d3\'c3\'ba\'af\'ca\'fd\'c5\'d0\'b6\'cf\'a3\'a9
\f0 \
			1
\f1 \'a3\'a9
\f0  %[^\\n]\
			2
\f1 \'a3\'a9
\f0  
\f1 \'c5\'d0\'b6\'cf
\f0                     
\f1 \'a3\'a8
\f0 exam7.c
\f1 \'a3\'a9\
\
\
\
\
\
\
\

\f0 \
\
	\
	4.
\f1 \'ca\'b9\'d3\'c3\cb12 \'d7\'d6\'b7\'fb\cb8 \'d7\'aa\'bb\'bb\cb12 \'ba\'af\'ca\'fd
\f0 \cb1            \
	    #include  <ctype.h>\
\
	    1> \cf6 tolower	
\f1 \cf0 \'b4\'f3\'d0\'b4\'d7\'aa\'bb\'bb\'ce\'aa\cb2 \'d0\'a1\'d0\'b4
\f0  \cb1          (15_tolower.c)\
	       int	 tolower(int c)\
	       
\f1 \'b2\'bb\'b9\'dc\'ca\'c7\'b4\'f3\'d0\'b4\'bb\'b9\'ca\'c7\'d0\'a1\'d0\'b4
\f0  
\f1 \'be\'ad\'b9\'fd
\f0 tolower 
\f1 \'b4\'a6\'c0\'ed
\f0   
\f1 \'b7\'b5\'bb\'d8\'b5\'c4\'b6\'bc\'ca\'c7\'d0\'a1\'d0\'b4
\f0 \
\
	    2> \cf6 toupper\cf0 	
\f1 \'d0\'a1\'d0\'b4\'d7\'aa\'bb\'bb\'ce\'aa\cb13 \'b4\'f3\'d0\'b4
\f0 \cb1 \
	       int	 toupper(int c)\
	       
\f1 \'b2\'bb\'b9\'dc\'ca\'c7\'b4\'f3\'d0\'b4\'bb\'b9\'ca\'c7\'d0\'a1\'d0\'b4
\f0  
\f1 \'be\'ad\'b9\'fd
\f0 toupper 
\f1 \'b4\'a6\'c0\'ed
\f0   
\f1 \'b7\'b5\'bb\'d8\'b5\'c4\'b6\'bc\'ca\'c7\'b4\'f3\'d0\'b4
\f0 \
\
	    3> 
\f1 \'ba\'af\'ca\'fd\'d4\'ad\'d0\'cd
\f0 :\
	       #include  <ctype.h>\
\
	       int toupper(int c);\
	       int tolower(int c);\
\
\
\
			
\f2\fs46 \CocoaLigature0   \cf14 if\cf0 (islower(ch))\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf15  11 \cf0         ch = toupper(ch);\
\cf15  12 \cf0     \cf14 else\cf0  \cf14 if\cf0 (isupper(ch))\
\cf15  13 \cf0         ch = tolower(ch);\
\cf15  14 \cf0 \
\cf15  15 \cf0     printf(\cf16 "ch = \cf17 %c\\n\cf16 "\cf0 ,ch);\
\
		
\f1 \'a1\'be\'d7\'a2\'a1\'bf\'b1\'d8\'d0\'eb\'ca\'c7tolower()\'bb\'f2toupper()\'b5\'c4\'b7\'b5\'bb\'d8\'d6\'b5\'b2\'c5\'ca\'c7\'d7\'aa\'bb\'bb\'b9\'fd\'b5\'c4\'d7\'d6\'b7\'fb\'a3\'ac\'d4\'ad\'d7\'d6\'b7\'fb\'b2\'bb\'b1\'e4\'a3\'ac\'c0\'fd\'d7\'d3\'c8\'e7\'c9\'cf\'a1\'a3
\f0\fs48 \CocoaLigature1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
\
	    
\f1 \'a1\'be\'bf\'ce\'cc\'c3\'c1\'b7\'cf\'b0\'a1\'bf
\f0 \
	  \cf6   1.
\f1 \'bd\'ab\'d3\'c3\'bb\'a7\'ca\'e4\'c8\'eb\'b5\'c4\'d7\'d6\'b7\'fb\'b4\'ae\'d6\'d0\'b5\'c4\'b4\'f3\'d0\'b4\'d7\'d6\'c4\'b8\'d7\'aa\'bb\'bb\'ce\'aa\'d0\'a1\'d0\'b4\'d7\'d6\'c4\'b8
\f0     
\f1 \'a3\'a8
\f0 exam8.c
\f1 \'a3\'a9
\f0 \
		 				 HHHHHH       hhhhhh \cf0 \
\
	    \uc0\u8710 2.
\f1 \'bd\'ab\'d3\'c3\'bb\'a7\'ca\'e4\'c8\'eb\'b5\'c4\'d7\'d6\'b7\'fb\'b4\'ae\'d6\'d0\'b5\'c4\'ca\'fd\'d7\'d6\'a1\'a2\'d0\'a1\'d0\'b4\'d7\'d6\'c4\'b8\'c8\'ab\'b2\'bf\'d7\'aa\'bb\'bb\'ce\'aa
\f0 *
\f1 \'ba\'c5
\f0    												
\f1 \'a3\'a8
\f0 exam9.c
\f1 \'a3\'a9
\f0 \
		Hello 123 World\
\
            	H****  *** W****\
	    		arr[i] = '*'\
\
	 \cf6    3.
\f1 \'bd\'ab\'d3\'c3\'bb\'a7\'ca\'e4\'c8\'eb\'b5\'c4\'d7\'d6\'b7\'fb\'b4\'ae\'d6\'d0\'b5\'c4\'c6\'e4\'cb\'fb\'d7\'d6\'b7\'fb\'d7\'aa\'bb\'bb\'ce\'aa
\f0 ?
\f1 \'ba\'c5
\f0           
\f1 \'a3\'a8
\f0 exam10.c
\f1 \'a3\'a9
\f0 \
		
\f1 \'c6\'e4\'cb\'fb\'d7\'d6\'b7\'fb\'b2\'bb\'b0\'fc\'c0\'a8\'ca\'fd\'d7\'d6
\f0 ,
\f1 \'d7\'d6\'c4\'b8
\f0 ,
\f1 \'bf\'d5\'b0\'d7
\f0  isspace\
		Hell+ world\
		Hell? world\
\cf0 \
====================================================\
\
	\'91\'92  
\f1 \'b5\'a5\'d2\'fd\'ba\'c5
\f0      \'91A\'92      \'91B\'92\

\f1 \'a1\'be\'d7\'d6\'b7\'fb\'b4\'ae\'a1\'bf\
  
\fs50 \'b8\'c5\'c4\'ee\'a3\'ba\'d2\'d4\cb13 \'a1\'b0\'a1\'b1\cb1 \'cb\'ab\'d2\'fd\'ba\'c5\'b0\'d1\'d2\'bb\'b8\'f6\'d7\'d6\'b7\'fb\'bb\'f2\'d5\'df\'d2\'bb\'b8\'f6\'d2\'d4\'c9\'cf\'b5\'c4\'d7\'d6\'b7\'fb\'c0\'a8\'c6\'f0\'c0\'b4\
			\'b3\'c9\'ce\'aa\'d7\'d6\'b7\'fb\'b4\'ae\'a1\'a3\'cf\'b5\'cd\'b3\'d7\'d4\'b6\'af\'d4\'da\'d7\'d6\'b7\'fb\'b4\'ae\'ba\'f3\'c3\'e6\'d2\'d4\'a1\'af\\0\'a1\'af\'bd\'e1\'ce\'b2\'a1\'a3		\
		\'a1\'b0A\'a1\'b1\
		\'a1\'b0ABCD\'a1\'b1\

\f0\fs48 \

\f1 \'b6\'fe\'a1\'a2\'d7\'d6\'b7\'fb\'b4\'ae
\f0   \
\
	\cb2 "hello world";\cb1 \
\
		1
\f1 \'a1\'a2\'b3\'a3\'c1\'bf\'c7\'f8(\'be\'b2\'cc\'ac\'b4\'e6\'b4\'a2\'c7\'f8)\
		2\'a1\'a2\'ca\'fd\'d7\'e9(\'d5\'bb)
\f0 \
\
\
	1.
\f1 \'d7\'d6\'b7\'fb\'b4\'ae
\f0 \
		
\f1 \'b2\'bb\'d2\'d4\'d7\'d6\'b7\'fb\'ca\'fd\'d7\'e9\'d2\'fd\'d3\'c3\'ca\'b1\'ce\'aa\'d2\'bb\'b8\'f6\'b3\'a3\'c1\'bf
\f0 \
\
		//
\f1 \'b4\'e6\'b4\'a2\'d4\'da\'be\'b2\'cc\'ac\'b4\'e6\'b4\'a2\'c7\'f8\'b5\'c4\'a1\'be\'d6\'bb\'b6\'c1\'ca\'fd\'be\'dd\'b6\'ce\'a1\'bf
\f0  \
		\cf9 char *p \cf0 = "\cb6 h\cb1 ello world\'94;  //
\f1 \'d7\'d6\'b7\'fb\'b4\'ae\'b3\'a3\'c1\'bf\'a3\'a8\'b2\'bb\'bf\'c9\'d0\'de\'b8\'c4\'b5\'c4\'d7\'d6\'b7\'fb\'b4\'ae\'a3\'a9\
\
			\'d5\'bb            \'b3\'a3\'c1\'bf\'c7\'f8
\f0 \
			\
		//
\f1 \'b4\'e6\'b4\'a2\'d4\'da\'b6\'af\'cc\'ac\'b4\'e6\'b4\'a2\'c7\'f8\'b5\'c4\'a1\'be\'d5\'bb\'c7\'f8\'a1\'bf
\f0 \
		\cf18 char str[]\cf0  = "hello world";  //
\f1 \'bf\'c9\'d0\'de\'b8\'c4\'b5\'c4\'d7\'d6\'b7\'fb\'b4\'ae\
\
			\'d5\'bb               \'d5\'bb
\f0 \
			\
	2.
\f1 \'d7\'d6\'b7\'fb\'b4\'ae\'b5\'c4\'b1\'be\'d6\'ca
\f0 :\
	   
\f1 \'d7\'d6\'b7\'fb\'b4\'ae\'b1\'be\'d6\'ca\'ce\'aa\cf19 \'d7\'d6\'b7\'fb\'b4\'ae\'b3\'a3\'c1\'bf
\f0 \cf0 .   \
\
	3.
\f1 \'cb\'bc\'bf\'bc
\f0 :\cb20 sizeof('A')\cb1  
\f1 \'ba\'cd
\f0 \cb13 sizeof("A")\cb1          (16_string.c)\
\
\
			
\f1 \'d7\'d6\'b7\'fb
\f0   <===>  ascii
\f1 \'c2\'eb  <===>  int  <===>   4\'b8\'f6\'d7\'d6\'bd\'da\
\
			\'a1\'b0hello world\'a1\'b1\

\f0 \
	
\f1 \cb20 \'d7\'d6\'b7\'fb\'b3\'a3\'c1\'bf\'b0\'b4\'d5\'d5
\f0 4
\f1 \'b8\'f6\'d7\'d6\'bd\'da\'b4\'a6\'c0\'ed
\f0 \cb1 \
	
\f1 \'d7\'d6\'b7\'fb\'b4\'ae\'b3\'a3\'c1\'bf\'ce\'aa\'c1\'cb\'bd\'da\'ca\'a1\'c4\'da\'b4\'e6\'bf\'d5\'bc\'e4
\f0 ,
\f1 \'d7\'d6\'b7\'fb\'b4\'ae\'d6\'d0\'b5\'c4\'cb\'f9\'d3\'d0\'d7\'d6\'b7\'fb\'be\'f9\'d2\'d4
\f0 \cb21 char
\f1 \'c0\'e0\'d0\'cd\'b4\'a6\'c0\'ed
\f0 \cb1 \
\
	4.
\f1 \'bb\'d8\'d2\'e4
\f0 char *str
\f1 \'ba\'cd
\f0 char str[]
\f1 \'c7\'f8\'b1\'f0
\f0            (17_string.c)\
\
=====================================================\
\

\f1 \'a1\'be\'d7\'d6\'b7\'fb\'b4\'ae
\f0 I/O
\f1 \'a1\'bf
\f0 \
\

\f1 \'c8\'fd\'a1\'a2\'d7\'d6\'b7\'fb\'b4\'ae\'b5\'c4\'ca\'e4\'c8\'eb\'ca\'e4\'b3\'f6
\f0 \
\
	1.
\f1 \'d7\'d6\'b7\'fb\'b4\'ae\'b5\'c4\'ca\'e4\'c8\'eb\'ba\'cd\'ca\'e4\'b3\'f6
\f0 \
\
	   1)
\f1 \'d7\'d6\'b7\'fb\'b4\'ae\'ca\'e4\'c8\'eb\'ba\'af\'ca\'fd    char    arr[]
\f0 \
\
		1> 
\f1 \'d3\'c3
\f0 scanf
\f1 \'ba\'af\'ca\'fd\'bb\'f1\'c8\'a1\'d7\'d6\'b7\'fb\'b4\'ae
\f0 scanf(\'93\cb6 %s\cb1 \'94);      \
				//
\f1 \'b2\'bb\'bf\'c9\'bd\'d3\'ca\'d5\'bf\'d5\'b8\'f1\'bb\'f2\'bb\'bb\'d0\'d0\'b7\'fb\'bb\'f2
\f0 Tab
\f1 \'bc\'fc
\f0 \
\
		2> 
\f1 \'c8\'e7\'ba\'ce\'bb\'f1\'c8\'a1\'b4\'f8\'bf\'d5\'b8\'f1\'b5\'c4\'d7\'d6\'b7\'fb\'b4\'ae
\f0 (
\f1 \'d5\'fd\'d4\'f2\'b1\'ed\'b4\'ef\'ca\'bd
\f0 \cb6 %[^\\n]\cb1 )  \
				//
\f1 \'bf\'c9\'d2\'d4\'bd\'d3\'ca\'d5\'bf\'d5\'b8\'f1\'bb\'f2
\f0 Tab
\f1 \'bc\'fc
\f0 ,
\f1 \'b2\'bb\'c4\'dc\'bd\'d3\'ca\'d5\'bb\'bb\'d0\'d0\'b7\'fb
\f0 			\
		3>\cb6  gets
\f1 \'ba\'af\'ca\'fd\cb1 \'bb\'f1\'c8\'a1\'d7\'d6\'b7\'fb\'b4\'ae
\f0       gets(arr);\
				//
\f1 \'b5\'c8\'bc\'db\'d3\'da
\f0 scanf
\f1 \'b5\'c4\'d5\'fd\'d4\'f2\'b1\'ed\'b4\'ef\'ca\'bd
\f0 %[^\\n]
\f1 \'b5\'c4\'d3\'c3\'b7\'a8\'a1\'a3\
				
\f0 //
\f1 \'b6\'f8\'c7\'d2\'d2\'bb\'b4\'ce\'d6\'bb\'c4\'dc\'bd\'d3\'ca\'d5\'d2\'bb\'b8\'f6\'d7\'d6\'b7\'fb\'b4\'ae
\f0  \
\
		 
\f1 \'bd\'e1\'c2\'db
\f0 : gets
\f1 \'ba\'af\'ca\'fd\'be\'df\'d3\'d0
\f0 \'94
\f1 \'bb\'f1\'c8\'a1\'bf\'d5\'b8\'f1\'bb\'f2
\f0 Tab
\f1 \'bc\'fc
\f0 \'94
\f1 \'b5\'c4\'b9\'a6\'c4\'dc
\f0 !   \
				//\cb22 gets(a)
\f1 \'cf\'e0\'b5\'b1\'d3\'da
\f0 scanf(\'93%[^\\n]\'94,a);\cb1 \
\
	   2)
\f1 \'d7\'d6\'b7\'fb\'b4\'ae\'ca\'e4\'b3\'f6\'ba\'af\'ca\'fd
\f0 \
\
		 1> printf("%s\cb11 \\n\cb1 ", str);               \
				//
\f1 \'d2\'aa\'ca\'d6\'b6\'af\'bc\'d3\'bb\'bb\'d0\'d0\'b7\'fb
\f0 \\n  \
				//
\f1 \'d2\'bb\'b4\'ce\'bf\'c9\'d2\'d4\'ca\'e4\'b3\'f6\'b6\'e0\'b8\'f6\'d7\'d6\'b7\'fb\'b4\'ae
\f0 \
\
		 2> \cb13 puts
\f1 \'ba\'af\'ca\'fd\cb1 \'bb\'e1\'d4\'da\'d7\'d6\'b7\'fb\'b4\'ae\'ca\'e4\'b3\'f6\'ba\'f3\cb11 \'cc\'ed\'bc\'d3\'bb\'bb\'d0\'d0\'b7\'fb\'ba\'c5
\f0 \cb1     \
				//
\f1 \'bc\'b4\'d7\'d4\'b6\'af\'b0\'d1
\f0 \\0
\f1 \'bb\'bb\'b3\'c9
\f0 \\n  \
				//
\f1 \'d2\'bb\'b4\'ce\'d6\'bb\'c4\'dc\'ca\'e4\'b3\'f6\'d2\'bb\'b8\'f6\'d7\'d6\'b7\'fb\'b4\'ae
\f0 \
\
		 
\f1 \'bd\'e1\'c2\'db
\f0 : puts
\f1 \'ba\'af\'ca\'fd\'be\'df\'d3\'d0
\f0 \'93
\f1 \'d7\'d4\'b6\'af\'bb\'bb\'d0\'d0
\f0 \'94
\f1 \'b5\'c4\'b9\'a6\'c4\'dc
\f0 !      				//puts(a)
\f1 \'cf\'e0\'b5\'b1\'d3\'da
\f0 printf(\'93%s\\n\'94,a);\
										\
        2.
\f1 \cb9 \'d2\'e7\'b3\'f6\cb1 \'d3\'eb
\f0 \cb6 \'93
\f1 \'c8\'e4\'b3\'e6\'b2\'a1\'b6\'be
\f0 \'94\cb1 \
		windows    
\f1 \'c8\'e4\'b3\'e6\'b2\'a1\'b6\'be      fgets\
\
		\'ba\'da\'bf\'cd       a       \
\
			long long    i = 0;\
			for(i = 0;i < 10000000000000;i ++)\
				mystrcpy();      =====>   \'c8\'c3\'c4\'e3\'b5\'c4\'d5\'bb\'b1\'c0\'c0\'a3\'c1\'cb\'a3\'ac\'cf\'b5\'cd\'b3\'b1\'c0\'c0\'a3\'c1\'cb\'a1\'a3
\f0 \
\
	    1)
\f1 \'d7\'d6\'b7\'fb\'b4\'ae\'ca\'b9\'d3\'c3
\f0 gets()
\f1 \'ca\'e4\'c8\'eb\'b2\'bb\'b0\'b2\'c8\'ab\'a1\'a3\'bb\'e1\'b5\'bc\'d6\'c2
\f0 \'93
\f1 \'c8\'e4\'b3\'e6\'b2\'a1\'b6\'be
\f0 \'94
\f1 \'a1\'a3
\f0  \
				//
\f1 \'d5\'e2\'ca\'c7\'d7\'d6\'b7\'fb\'b4\'ae\'b5\'c4\'b3\'a4\'b6\'c8\'ce\'ca\'cc\'e2\'c1\'f4\'cf\'c2\'b5\'c4\'d2\'fe\'bb\'bc
\f0 !\
\
\
\
\
\
			              \
	    2)
\f1 \'bd\'e2\'be\'f6\'b7\'bd\'b7\'a8
\f0 ,
\f1 \'b8\'c4\'d3\'c3
\f0 fgets
\f1 \'b4\'fa\'cc\'e6
\f0 gets:\
\
		char *str = "abc";\
		\cf6 char *\cf0 fgets(char *\cf6 buf\cf0 , int \cf9 bufsize\cf0 , \cf8 FILE *\cf0 stream);   (18_fgets.c)\
\
		//
\f1 \'ca\'b9\'d3\'c3
\f0 fgets
\f1 \'ba\'af\'ca\'fd\'bd\'d3\'ca\'d5\'bc\'fc\'c5\'cc\'ca\'e4\'c8\'eb\'b5\'c4\'d7\'d6\'b7\'fb\'b4\'ae\'ca\'b1
\f0 ,
\f1 \'b5\'da\'c8\'fd\'b8\'f6\'b2\'ce\'ca\'fd\'d0\'b4\'b3\'c9
\f0 stdin. \
			stdout   
\f1 \'b1\'ea\'d7\'bc\'ca\'e4\'b3\'f6
\f0  \
			\cb22 stdin\cb1      
\f1 \'b1\'ea\'d7\'bc\'ca\'e4\'c8\'eb  (\'bb\'ba\'b4\'e6fanbuf)
\f0 \
			stderr   
\f1 \'b1\'ea\'d7\'bc\'b3\'f6\'b4\'ed
\f0   \
\
		
\f1 \'b4\'d3\'b1\'ea\'d7\'bc\'ca\'e4\'c8\'eb\'bb\'f1\'c8\'a1\'d6\'b8\'b6\'a8\'b3\'a4\'b6\'c8\'b5\'c4\'d7\'d6\'b7\'fb\'b4\'ae
\f0 ,
\f1 \'b0\'fc\'ba\'ac\'d7\'d6\'b7\'fb\'b4\'ae\'bd\'e1\'ca\'f8\'b7\'fb\
\
		bufsize     10\

\f0 \
		1.
\f1 \'c8\'e7\'b9\'fb\'ca\'e4\'c8\'eb\'b5\'c4\'c4\'da\'c8\'dd\'b3\'a4\'b6\'c8\'d0\'a1\'d3\'da\'b4\'ab\'bd\'f8\'c8\'a5\'b5\'c4\'b5\'da\'b6\'fe\'b8\'f6\'b2\'ce\'ca\'fd\'b5\'c4\'d6\'b5
\f0 ,
\f1 \'d4\'f2\'bb\'e1\'b1\'a3\'c1\'f4\
		    \'b6\'c1\'c8\'a1\'b5\'bd\'b5\'c4\'d7\'d6\'b7\'fb\'b4\'ae\'ba\'cd
\f0 \cb13 \'91\\n\'92\cb1 ,
\f1 \'b6\'f8\'c7\'d2\'bb\'e1\'d4\'da
\f0 \\n
\f1 \'ba\'f3\'c3\'e6
\f0 + \'91\\0\'92
\f1 \'a1\'a3\
\
					abc\cf23 \\n\cf0 \\0\

\f0 \
		2.
\f1 \'c8\'e7\'b9\'fb\'b4\'f3\'d3\'da\'bb\'f2\'b5\'c8\'d3\'da\'b5\'da\'b6\'fe\'b8\'f6\'b2\'ce\'ca\'fd\'b5\'c4\'d6\'b5\'a3\'ac\'d4\'f2\'d4\'da\'b6\'c1\'c8\'a1\'b5\'bd\'b5\'c4\'a3\'a8
\f0 bufsize-1
\f1 \'a3\'a9\'b8\'f6\
		    \'d7\'d6\'b7\'fb\'b4\'ae\'ba\'f3\'c3\'e6\'d7\'d4\'b6\'af\'cc\'ed\'bc\'d3\'d2\'bb\'b8\'f6
\f0 \'92\\0\'92
\f1 \'d7\'d6\'b7\'fb
\f0 .\
\
				    helloworl
\f1 \\0
\f0 \
\
		3.
\f1 \'c8\'e7\'b9\'fb\'ca\'c7\'d2\'f2\'ce\'aa\'b6\'c1\'c8\'a1\'b5\'bd\'ce\'c4\'bc\'fe\'bd\'e1\'ca\'f8\'b7\'fb
\f0 \cb13 EOF
\f1 \cb1 \'b6\'f8\'bd\'e1\'ca\'f8\'a3\'ac\'c4\'c7\'c3\'b4\'bb\'e1\'b1\'a3\'c1\'f4\'b6\'c1\'c8\'a1\'b5\'bd\'b5\'c4\
		    \'d7\'d6\'b7\'fb\'b4\'ae\'a3\'ac\'b2\'a2\'d4\'da\'c6\'e4\'ba\'f3\'bc\'d3
\f0 \'91\\0\'92,
\f1 \'b5\'ab
\f0 EOF
\f1 \'b2\'bb\'d3\'e8\'b1\'a3\'c1\'f4\'a1\'a3\
\
			\'a1\'be
\f3 \uc0\u55357 \u56375 
\f1 \'a1\'bf\'d7\'d6\'b7\'fb\'b4\'ae\'ca\'c7\'d2\'d4\\0\'d7\'f7\'ce\'aa\'bd\'e1\'ca\'f8\'b7\'fb\'a3\'ac\'b6\'f8\cb3 \'ce\'c4\'bc\'fe\'ca\'c7\'d2\'d4EOF\'d7\'f7\'ce\'aa\'bd\'e1\'ca\'f8\'b7\'fb\cb1 \'b5\'c4\'a1\'a3\
				   hello\cb6 \\0\cf9 \cb1 \'a1\'aeEOF\'a1\'af   \
\
\

\f0 \cf0 \
\
	    
\f1 \'a1\'be\'bf\'ce\'cc\'c3\'c1\'b7\'cf\'b0\'a1\'bf
\f0 \
		 
\f1 \'c8\'e7\'b9\'fb\'ca\'e4\'c8\'eb\'b5\'c4\'d7\'d6\'b7\'fb\'b4\'ae\'b5\'c4\'b8\'f6\'ca\'fd\'d0\'a1\'d3\'da
\f0 fgets
\f1 \'b5\'c4\'b5\'da\'b6\'fe\'b8\'f6\'b2\'ce\'ca\'fd\'b5\'c4\'d6\'b5
\f0 ,\
		 
\f1 \'b0\'d1\'d7\'d6\'b7\'fb\'b4\'ae\'c0\'ef\'b5\'c4
\f0 \cb12 \\n
\f1 \cb1 \'b4\'a6\'c0\'ed\'b5\'f4
\f0 .  (exam11.c)\
\
\
\
\
\
\
\
\
\
====================================================\
\

\f1 \cf9 \'a1\'be\'d7\'d6\'b7\'fb\'b4\'ae\'d7\'aa\'bb\'bb\'ba\'af\'ca\'fd\'a1\'bf
\f0 \cf0 \
\

\f1 \'cb\'c4\'a1\'a2\'d7\'d6\'b7\'fb\'b4\'ae\'d7\'aa\'bb\'bb\'ba\'af\'ca\'fd
\f0     \'9312345\'94     12345\
\
	
\f1 \'d0\'e8\'c7\'f3
\f0 :
\f1 \'cf\'d6\'d4\'da\'d3\'c3\'bb\'a7\'ca\'e4\'c8\'eb\'d2\'bb\'b8\'f6\'cb\'e3\'ca\'f5\'b1\'ed\'b4\'ef\'ca\'bd
\f0 ,
\f1 \'d2\'aa\'c7\'f3\'b5\'c3\'b5\'bd\'b6\'d4\'d3\'a6\'b5\'c4\'bd\'e1\'b9\'fb\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs50 \cf0 					\'931234\'94+\'934321\'94==   
\f1 \'a3\'bf\

\f0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\fs48 \cf0 	
\f1 \'cb\'bc\'bf\'bc
\f0 :
\f1 \'c8\'e7\'ba\'ce\'bd\'ab\'d7\'d6\'b7\'fb\'b4\'ae\'d6\'d0\'b5\'c4
\f0 \'94
\f1 \'d7\'d6\'b7\'fb\'ca\'fd\'d7\'d6
\f0 \'94
\f1 \'d7\'aa\'bb\'bb\'ce\'aa
\f0 \'94
\f1 \'d5\'e6\'ca\'b5\'b5\'c4\'ca\'fd\'d7\'d6
\f0 \'94\
\
	1.
\f1 \'d7\'d6\'b7\'fb\'b4\'ae\'d7\'aa\'bb\'bb\'ba\'af\'ca\'fd
\f0   
\f1 \'a3\'a8
\f0 #include <std\cb6 lib\cb1 .h>
\f1 \'a3\'a9
\f0 \
\
	   1
\f1 \'a3\'a9
\f0\fs50 \cb13 int atoi(char *) 
\f1 \'ba\'af\'ca\'fd
\f0 \cb1  \
     
\fs48 \
			\cb22 a\cb1 to\cb22 i
\f1 \cb1 \'bd\'ab\'d7\'d6\'b7\'fb\'b4\'ae\'ca\'fd\'d7\'d6\'d7\'aa\'bb\'af\'b3\'c9\'d5\'fb\'d0\'cd\'ca\'fd\'d7\'d6
\f0         
\f1 \'a3\'a8
\f0 19_atoi.c
\f1 \'a3\'a9
\f0 \
			\
			\'910\'92  -   48  \'97\'97\'97\'97>
\f1 \'ca\'fd\'d7\'d6
\f0 0\
\
			\'93123abc345\'94  
\f1 \'a3\'ba\'bf\'c9\'d2\'d4\'ca\'b6\'b1\'f0\'b7\'c7\'ca\'fd\'d7\'d6\'d7\'d6\'b7\'fb
\f0 \
			\'93 \cb24     \cb1 123abc\'94     :
\f1 \'bf\'c9\'d2\'d4\'ca\'b6\'b1\'f0\'c7\'b0\'c3\'e6\'b5\'c4\'bf\'d5\'b8\'f1
\f0 \
			\'93\cb11 -\cb1 123abc456\'94  
\f1 \'a3\'ba\'bf\'c9\'d2\'d4\'ca\'b6\'b1\'f0
\f0 + - 
\f1 \'b7\'fb\'ba\'c5
\f0 \
\
			 -123   456\
\
			
\fs50 atoi
\f1 \'ba\'af\'ca\'fd\'b5\'c4\'b9\'a4\'d7\'f7\'d4\'ad\'c0\'ed
\f0  
\f1 \'a3\'ba
\f0 \
			
\f1 \'b4\'d3\'b5\'da\'d2\'bb\'b8\'f6\'b7\'c7\'bf\'d5\'b8\'f1\'b5\'c4\'ca\'fd\'d7\'d6\'b7\'fb\'bf\'aa\'ca\'bc\'d7\'aa\'bb\'bb\'a3\'ac\'d6\'b1\'b5\'bd\'d3\'f6\'b5\'bd\
			\'b5\'da\'d2\'bb\'b8\'f6\'b7\'c7\'ca\'fd\'d7\'d6\'d7\'d6\'b7\'fb\'bd\'e1\'ca\'f8\'a1\'a3\'c0\'fd\'c8\'e7\'a3\'ba
\f0  \
\
									123abc\

\fs48 \
		2
\f1 \'a3\'a9\'c6\'e4\'cb\'fb\'d7\'aa\'bb\'af\'ba\'af\'ca\'fd
\f0 \
					1> ato\cb25 l
\f1 \cb1 \'bd\'ab\'d7\'d6\'b7\'fb\'b4\'ae\'ca\'fd\'d7\'d6\'d7\'aa\'bb\'af\'b3\'c9\'b3\'a4\'d5\'fb\'d0\'cd\'ca\'fd\'d7\'d6
\f0 					2> ato\cb6 f
\f1 \cb1 \'d7\'d6\'b7\'fb\'b4\'ae\'ca\'fd\'d7\'d6\'d7\'aa\'bb\'af\'b3\'c9\'cb\'ab\'be\'ab\'b6\'c8\'d0\'cd
\f0 (double)
\f1 \'ca\'fd\'d7\'d6
\f0 	\
			 
\f1 \'d7\'a2\'d2\'e2\'a3\'ba\
			 
\f0 1>atof
\f1 \'b7\'b5\'bb\'d8
\f0 double
\f1 \'d0\'cd\'ca\'fd\'d7\'d6\'a3\'ac\'b6\'f8\'b2\'bb\'ca\'c7
\f0 float
\f1 \'d0\'cd
\f0 ;\
		     2>atof
\f1 \'d2\'bb\'b6\'a8\'d2\'aa\'bc\'d3\'cd\'b7\'ce\'c4\'bc\'fe
\f0 <stdlib.h>,
\f1 \'b2\'bb\'c8\'bb\'bb\'e1\'b3\'f6\'b4\'ed
\f0 ;\
		     3>atol
\f1 \'ba\'cd
\f0 atoi
\f1 \'c8\'e7\'b9\'fb\'b2\'bb\'bc\'d3
\f0 <stdlib.h>
\f1 \'bb\'e1\'b1\'a8\'be\'af\'b8\'e6\'a3\'ac\'b5\'ab\'bd\'e1\'b9\'fb\'c8\'d4\'d5\'fd\'c8\'b7
\f0 ;\
		     4>
\f1 \'bd\'a8\'d2\'e9\'d4\'da\'ca\'b9\'d3\'c3\'d5\'e2\'d0\'a9\'d7\'aa\'bb\'bb\'ba\'af\'ca\'fd\'b5\'c4\'ca\'b1\'ba\'f2\cb3 \'d2\'bb\'c2\'c9\'bc\'d3\'c9\'cf\'cd\'b7\'ce\'c4\'bc\'fe
\f0 <stdlib.h>.\cb1 \
\
	\cb3   3
\f1 \'a3\'a9\'d7\'d4\'d6\'f7\'ca\'b5\'cf\'d6
\f0 myatoi
\f1 \'ba\'af\'ca\'fd
\f0 (
\f1 \'d6\'a7\'b3\'d6\'d5\'fd\'b8\'ba\'ca\'fd
\f0 )      \
		
\f1 	\
			\'d1\'dd\'ca\'be:		
\f0 (
\f2\fs46 \CocoaLigature0 20_myatoi.c
\f0\fs48 \CocoaLigature1 )    
\f1 \cf9 \'a1\'be\'cf\'c8\'d7\'d4\'bc\'ba\'cb\'bc\'bf\'bc\'a1\'bf
\f0 \cf0 \
\
				"123" + "877"\cb1 \
\
\
	   4
\f1 \'a3\'a9
\f0 \cb26 strtol
\f1 \'ba\'af\'ca\'fd
\f0 \cb1          (21_strtol.c)\
\
			str  
\f1 to    l
\f0 \
\
		 10 = strtol(\'931010",NULL,base);\
		 
\f1 \'d7\'d6\'b7\'fb\'b4\'ae\'d6\'d0\'b2\'bb\'c4\'dc\'b3\'f6\'cf\'d6\'ba\'cd\'b5\'b1\'c7\'b0\'bd\'f8\'d6\'c6\'cf\'e0\'e3\'a3\'b5\'c4\'ca\'fd\'be\'dd
\f0 \
\
	     1>atol
\f1 \'b5\'c4\'d4\'f6\'c7\'bf\'b0\'e6
\f0 \
	\
	     2>
\f1 \'ba\'af\'ca\'fd\'cb\'b5\'c3\'f7
\f0 :\
		    	1) 
\f1 \'bd\'ab\'d6\'b8\'b6\'a8\'d7\'d6\'b7\'fb\'b4\'ae\'b0\'b4\'d5\'d5
\f0 base
\f1 \'b5\'c4\'bd\'f8\'d6\'c6\'b7\'bd\'ca\'bd\'d7\'aa\'bb\'bb\'ce\'aa
\f0 10
\f1 \'bd\'f8\'d6\'c6\'b5\'c4\'b3\'a4\'d5\'fb\'d0\'cd
\f0 ;\
\
	 		2) base
\f1 \'b7\'b6\'ce\'a7\'ce\'aa
\f0 \cb13 2~36
\f1 \cb1 \'a3\'ac\'d2\'b2\'bf\'c9\'d2\'d4\'ca\'c7\cb22 \'cd\'a8\'d3\'c3\'b5\'c4
\f0 0;\cb1 \
					base
\f1 \'ce\'aa
\f0 0
\f1 \'b1\'ed\'ca\'be\'b8\'f9\'be\'dd\'b1\'ed\'ca\'be\'c8\'a5\'c5\'d0\'b6\'cf\'d2\'aa\'d7\'aa\'bb\'bb\'b5\'c4\'ca\'fd\'d7\'d6\'d7\'d6\'b7\'fb\'b4\'ae\'b5\'bd\'b5\'d7\'ca\'c7\'ca\'b2\'c3\'b4					\'bd\'f8\'d6\'c6\'b5\'c4\'a1\'a3\'b2\'bb\'c4\'dc\'ca\'b6\'b1\'f00b
\f0 \
\
			3) base
\f1 \'ce\'aa
\f0 0
\f1 \'ca\'b1\'b1\'ed\'ca\'be\'c4\'ac\'c8\'cf\'ce\'aa
\f0 10
\f1 \'bd\'f8\'d6\'c6\'a3\'ac\'b5\'ab\'ca\'c7\'d7\'d6\'b7\'fb\'b4\'ae\'d6\'d0\'d2\'d4
\f0 0x
\f1 \'bb\'f2\
				\'d2\'d4
\f0 0
\f1 \'bf\'aa\'cd\'b7\'ca\'b1\'a3\'ac\'d4\'f2\'d3\'d6\'c8\'cf\'ce\'aa\'ca\'c7
\f0 16
\f1 \'bb\'f2
\f0 8
\f1 \'bd\'f8\'d6\'c6\'a1\'a3\

\f0 \
				
\f1 \'c8\'e7\'b9\'fb\'d7\'d6\'b7\'fb\'b4\'ae\'ca\'c7\'d2\'d4
\f0 0b
\f1 \'bf\'aa\'cd\'b7
\f0 ,
\f1 \'d2\'d4
\f0 b
\f1 \'d7\'f7\'ce\'aa\'bd\'d8\'b6\'cf\'b7\'fb\
			  \'a3\'a8\'b2\'bb\'c4\'dc\'ca\'b6\'b1\'f0
\f0 0b
\f1 \'ce\'aa\'b6\'fe\'bd\'f8\'d6\'c6\'a3\'a9\'a1\'a3
\f0 \
\
====================================================\
\

\f1 \'a1\'be
\f0 HomeWork
\f1 \'a1\'bf
\f0 \
\
1.
\f1 \'ca\'e4\'c8\'eb\'c8\'ce\'d2\'e2\'c8\'fd\'b8\'f6\'d7\'d6\'b7\'fb\'b4\'ae\'a3\'ac\'bd\'ab\'c8\'fd\'b8\'f6\'d7\'d6\'b7\'fb\'b4\'ae\'c6\'b4\'bd\'d3\'b5\'bd\'d2\'bb\'c6\'f0\'a3\'ac\
   \'c9\'fa\'b3\'c9\'d0\'c2\'b5\'c4\'d7\'d6\'b7\'fb\'b4\'ae\'a1\'a3
\f0    				<string.h>          \cf9 (home1.c)\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\fs44 \cf0 	void threetoOne(char * dst, const char * s1, const char * s2, const char * s3);\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\fs48 \cf0 \
		char * strcat(char * s1, const char * s2);\
		char * strcpy(char * s1, const char * s2);\
\
2.
\f1 \'b1\'e0\'d0\'b4\'ba\'af\'ca\'fd\'a3\'ac\'b4\'ab\'c8\'eb\'b8\'e8\'b4\'ca\'a3\'ac\'b4\'f2\'d3\'a1\'b3\'f6\'d7\'f7\'d5\'df\'b5\'c4\'c3\'fb\'d7\'d6
\f0 \
\'93[ar:
\f1 \'d6\'dc\'bd\'dc\'c2\'d7
\f0 ][ti:
\f1 \'cb\'ab\'bd\'da\'b9\'f7
\f0 ][al:
\f1 \'b7\'b6\'cc\'d8\'ce\'f7
\f0 ]\'94         \cf9  (home2.c)\cf0 \
	void printArcherName(const char * str);\
\
3.
\f1 \'d4\'da\'d7\'d6\'b7\'fb\'b4\'ae
\f0 \'94abcbcabcedfabc\'94
\f1 \'d6\'d0\'b2\'e9\'d5\'d2
\f0 \'94abc\'94
\f1 \'b3\'f6\'cf\'d6\'b5\'c4\'b4\'ce\'ca\'fd\

\f0 							\cf9 (home3.c)\
\cf0 \
====================================================\
\

\f1 \'a1\'be\'bf\'ce\'ba\'f3\'bc\'d3\'d3\'cd\'d5\'be\'a1\'bf
\f0 \
\

\f1 \'d2\'bb
\f0 .
\f1 \'cf\'e0\'b9\'d8\'ba\'af\'ca\'fd
\f0 \
//
\f1 \'c1\'cb\'bd\'e2
\f0 \
1. int isalpha(int c);\
//
\f1 \'c5\'d0\'b6\'cf\'d2\'bb\'b8\'f6\'d7\'d6\'b7\'fb\'ca\'c7\'b7\'f1\'ca\'c7\'d7\'d6\'c4\'b8\'a1\'a3
\f0 \
2. int isnumber(int c);\
//
\f1 \'c5\'d0\'b6\'cf\'d2\'bb\'b8\'f6\'d7\'d6\'b7\'fb\'ca\'c7\'b7\'f1\'ca\'c7\'b1\'ed\'ca\'be\'ca\'fd\'d7\'d6\'b5\'c4\'d7\'d6\'b7\'fb\'a1\'a3
\f0 \
3. int isupper(int c);\
//
\f1 \'c5\'d0\'b6\'cf\'d2\'bb\'b8\'f6\'d7\'d6\'b7\'fb\'ca\'c7\'b7\'f1\'ca\'c7\'b1\'ed\'ca\'be\'b4\'f3\'d0\'b4\'d7\'d6\'c4\'b8\'b5\'c4\'d7\'d6\'b7\'fb
\f0 \
4. int islower(int c);\
//
\f1 \'c5\'d0\'b6\'cf\'d2\'bb\'b8\'f6\'d7\'d6\'b7\'fb\'ca\'c7\'b7\'f1\'ca\'c7\'d0\'a1\'d0\'b4\'d7\'d6\'c4\'b8\'a1\'a3
\f0 \
\
//
\f1 \'d5\'c6\'ce\'d5
\f0 \
<string.h>\
\
5. size_t strlen(const char * s);\
//
\f1 \'b4\'ab\'c8\'eb\'d2\'bb\'b8\'f6\'d7\'d6\'b7\'fb\'b4\'ae\'a3\'ac\'b7\'b5\'bb\'d8\'d7\'d6\'b7\'fb\'b4\'ae\'b5\'c4\'d3\'d0\'d0\'a7\'d7\'d6\'b7\'fb\'b8\'f6\'ca\'fd\'a1\'a3
\f0 \
//size_t
\f1 \'be\'cd\'ca\'c7
\f0 unsigned long
\f1 \'b5\'c4\'b1\'f0\'c3\'fb\'a1\'a3
\f0 \
\
6. char * strcpy(char * s1, const char * s2);\
//
\f1 \'bd\'ab\'d7\'d6\'b7\'fb\'b4\'ae
\f0 s2
\f1 \'bf\'bd\'b1\'b4\'b5\'bd\'d7\'d6\'b7\'fb\'ca\'fd\'d7\'e9
\f0 s1
\f1 \'d6\'d0\'a3\'ac\'b7\'b5\'bb\'d8
\f0 s1
\f1 \'a3\'ac\'bc\'b4\'d7\'d6\'b7\'fb\'ca\'fd\'d7\'e9\'b5\'c4\'ca\'d7\'d4\'aa\'cb\'d8\'b5\'d8\'d6\'b7\'a1\'a3
\f0 \
//
\f1 \'ca\'b9\'d3\'c3\'d5\'e2\'b8\'f6\'ba\'af\'ca\'fd\'c7\'b0\'cc\'e1\'ca\'c7
\f0 s1
\f1 \'d3\'d0\'d7\'e3\'b9\'bb\'b4\'f3\'b5\'c4\'bf\'d5\'bc\'e4\'a1\'a3\'c8\'e7\'b9\'fb\'d4\'bd\'bd\'e7\'a3\'ac\'bf\'c9\'c4\'dc\'b5\'bc\'d6\'c2\'ce\'b4\'d6\'aa\'b5\'c4\'b4\'ed\'ce\'f3\'a1\'a3
\f0 \
\
7. char * strcat (char * s1, const char * s2);\
//s1
\f1 \'ca\'c7\'d2\'bb\'b8\'f6\'d7\'d6\'b7\'fb\'ca\'fd\'d7\'e9\'a3\'ac
\f0 s2
\f1 \'ca\'c7\'d2\'bb\'b8\'f6\'d7\'d6\'b7\'fb\'b4\'ae\'bb\'f2\'d7\'d6\'b7\'fb\'ca\'fd\'d7\'e9\'a1\'a3
\f0 \
//
\f1 \'bd\'ab
\f0 s2
\f1 \'b5\'c4\'c4\'da\'c8\'dd\'c6\'b4\'bd\'d3\'b5\'bd
\f0 s1
\f1 \'ba\'f3\'c3\'e6\'d0\'ce\'b3\'c9\'d0\'c2\'b5\'c4\'d7\'d6\'b7\'fb\'b4\'ae\'a3\'ac\'d0\'c2\'d7\'d6\'b7\'fb\'b4\'ae\'a3\'ac\'b4\'e6\'b4\'a2\'d4\'da
\f0 s1
\f1 \'d6\'d0\'a1\'a3
\f0 \
//
\f1 \'b7\'b5\'bb\'d8\'d6\'b5\'ca\'c7
\f0 s1.\
\
8.char * strstr(const char *s1, const char *s2);\
//
\f1 \'d4\'da\'d7\'d6\'b7\'fb\'b4\'ae
\f0 s1
\f1 \'d6\'d0\'a3\'ac\'d1\'b0\'d5\'d2\'d7\'d3\'b4\'ae
\f0 s2
\f1 \'ca\'d7\'b4\'ce\'b3\'f6\'cf\'d6\'b5\'c4\'ce\'bb\'d6\'c3\'a1\'a3
\f0 \
//
\f1 \'b7\'b5\'bb\'d8\'d7\'d3\'b4\'ae\'d4\'da
\f0 s1
\f1 \'d6\'d0\'ca\'d7\'b4\'ce\'b3\'f6\'cf\'d6\'ce\'bb\'d6\'c3\'b5\'c4\'b5\'da\'d2\'bb\'b8\'f6\'d7\'d6\'b7\'fb\'b5\'c4\'b5\'d8\'d6\'b7\'a1\'a3
\f0 \
\
9.int strcmp(const char * s1, const char * s2);\
//
\f1 \'b1\'c8\'bd\'cf\'c1\'bd\'b8\'f6\'d7\'d6\'b7\'fb\'b4\'ae\'b5\'c4\'b4\'f3\'d0\'a1\'b9\'d8\'cf\'b5
\f0 \
//s1
\f1 \'b4\'f3\'b7\'b5\'bb\'d8\'d5\'fd\'ca\'fd\'a3\'ac
\f0 s2
\f1 \'b4\'f3\'b7\'b5\'bb\'d8\'b8\'ba\'ca\'fd\'a3\'ac\'cf\'e0\'b5\'c8\'b7\'b5\'bb\'d8
\f0 0.\
\
10.int atoi(const char * s);\
//
\f1 \'b4\'ab\'c8\'eb\'b1\'ed\'ca\'be\'ca\'fd\'d7\'d6\'b5\'c4\'d7\'d6\'b7\'fb\'b4\'ae\'a3\'ac\'b7\'b5\'bb\'d8\'d7\'d6\'b7\'fb\'b4\'ae\'cb\'f9\'b1\'ed\'ca\'be\'b5\'c4\'ca\'fd\'d7\'d6
\f0 \
\
11.char * strtok(char * s, const char * sep);\
//
\f1 \'b7\'d6\'b8\'ee\'d7\'d6\'b7\'fb\'b4\'ae
\f0  
\f1 \'bd\'ab\'d2\'bb\'b8\'f6\'d7\'d6\'b7\'fb\'b4\'ae\'a3\'ac\'b7\'d6\'b8\'ee\'b3\'c9\'d2\'bb\'b8\'f6\'b8\'f6\'d7\'d3\'b4\'ae\'a1\'a3
\f0 \
\
========================over=========================\
\
\
\
}